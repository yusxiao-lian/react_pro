{"version":3,"sources":["components/NavHeader/index.js","components/NavHeader/index.module.scss","pages/Login/index.module.css","pages/Login/index.js"],"names":["withRouter","_ref","children","history","className","rightContent","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","antd_mobile_lib_nav_bar__WEBPACK_IMPORTED_MODULE_1___default","styles","navBar","join","mode","icon","onLeftClick","go","module","exports","root","navHeader","backHome","formItem","input","formSubmit","submit","error","Login","props","react__WEBPACK_IMPORTED_MODULE_10___default","_components_NavHeader__WEBPACK_IMPORTED_MODULE_15__","antd_mobile_lib_white_space__WEBPACK_IMPORTED_MODULE_9___default","size","antd_mobile_lib_wing_blank__WEBPACK_IMPORTED_MODULE_5___default","formik__WEBPACK_IMPORTED_MODULE_12__","name","placeholder","component","type","antd_mobile_lib_flex__WEBPACK_IMPORTED_MODULE_7___default","Item","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","withFormik","mapPropsToValues","username","password","validationSchema","Yup","shape","required","matches","handleSubmit","_handleSubmit","Object","E_reactdemo_11_react_04_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","E_reactdemo_11_react_04_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","values","res","_res$data","status","body","description","wrap","_context","prev","next","API","post","sent","data","localStorage","setItem","token","location","state","replace","from","pathname","antd_mobile_lib_toast__WEBPACK_IMPORTED_MODULE_2___default","info","stop","_x","_x2","apply","this","arguments"],"mappings":"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","file":"static/js/18.424b6838.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { NavBar } from 'antd-mobile'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n// 添加属性校验\r\nimport PropTypes from 'prop-types'\r\n\r\n// 导入样式\r\nimport styles from './index.module.scss'\r\n\r\nconst NavHeader = ({ children, history, className, rightContent }) => {\r\n  return (\r\n    <NavBar\r\n      className={[styles.navBar, className].join(' ')}\r\n      mode=\"light\"\r\n      icon={<i className=\"iconfont icon-back\" />}\r\n      onLeftClick={() => history.go(-1)}\r\n      rightContent={rightContent}\r\n    >\r\n      {children}\r\n    </NavBar>\r\n  )\r\n}\r\n\r\n// 添加属性校验\r\nNavHeader.propTypes = {\r\n  // 约定 children 是字符串类型，并且为必填项\r\n  children: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  rightContent: PropTypes.array\r\n}\r\n\r\nexport default withRouter(NavHeader)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavHeader_navBar__UggGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__3m1Hf\",\"navHeader\":\"Login_navHeader__AjJGh\",\"backHome\":\"Login_backHome__31V2f\",\"formItem\":\"Login_formItem__3RYfO\",\"input\":\"Login_input__3VWL8\",\"formSubmit\":\"Login_formSubmit__10F8z\",\"submit\":\"Login_submit__xzNp4\",\"error\":\"Login_error__3TbU4\"};","import React from 'react'\r\nimport { Flex, WingBlank, WhiteSpace, Toast } from 'antd-mobile'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'\r\n\r\nimport * as Yup from 'yup'\r\n\r\nimport { API } from '../../utils'\r\n\r\nimport NavHeader from '../../components/NavHeader'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 验证规则：\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/\r\n\r\nlet Login = props => {\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {/* 顶部导航 */}\r\n      <NavHeader className={styles.navHeader}>账号登录</NavHeader>\r\n      <WhiteSpace size=\"xl\" />\r\n\r\n      {/* 登录表单 */}\r\n      <WingBlank>\r\n        <Form>\r\n          <div className={styles.formItem}>\r\n            <Field\r\n              name=\"username\"\r\n              className={styles.input}\r\n              placeholder=\"请输入账号\"\r\n            />\r\n          </div>\r\n          {/* 长度为5到8位，只能出现数字、字母、下划线 */}\r\n          <ErrorMessage\r\n            name=\"username\"\r\n            component=\"div\"\r\n            className={styles.error}\r\n          />\r\n          <div className={styles.formItem}>\r\n            <Field\r\n              className={styles.input}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"请输入密码\"\r\n            />\r\n          </div>\r\n          {/* 长度为5到12位，只能出现数字、字母、下划线 */}\r\n          <ErrorMessage\r\n            name=\"password\"\r\n            component=\"div\"\r\n            className={styles.error}\r\n          />\r\n          <div className={styles.formSubmit}>\r\n            <button className={styles.submit} type=\"submit\">\r\n              登 录\r\n            </button>\r\n          </div>\r\n        </Form>\r\n        <Flex className={styles.backHome}>\r\n          <Flex.Item>\r\n            <Link to=\"/registe\">还没有账号，去注册~</Link>\r\n          </Flex.Item>\r\n        </Flex>\r\n      </WingBlank>\r\n    </div>\r\n  )\r\n}\r\n\r\n// 使用 withFormik 高阶组件包装Login组件\r\nLogin = withFormik({\r\n  // 为被包装组件 Login 提供表单元素的状态值，相当于原来在 state 中添加的状态\r\n  mapPropsToValues: () => ({ username: 'admin', password: 'admin' }),\r\n\r\n  // 表单校验规则\r\n  validationSchema: Yup.object().shape({\r\n    // string() 表示：是字符串类型\r\n    // required() 表示：必填项\r\n    // matches() 表示：使用正则表达式来校验\r\n    username: Yup.string()\r\n      .required('账号为必填项')\r\n      .matches(REG_UNAME, '长度为5到8位，只能出现数字、字母、下划线'),\r\n    password: Yup.string()\r\n      .required('密码为必填项')\r\n      .matches(REG_PWD, '长度为5到12位，只能出现数字、字母、下划线')\r\n  }),\r\n\r\n  // 表单的提交事件\r\n  handleSubmit: async (values, { props }) => {\r\n    const { username, password } = values\r\n\r\n    const res = await API.post('/user/login', {\r\n      username,\r\n      password\r\n    })\r\n\r\n    const { status, body, description } = res.data\r\n    if (status === 200) {\r\n      // 登录成功\r\n      localStorage.setItem('hkzf_token', body.token)\r\n\r\n      // 因为有两种情况都会进入到登录页面，所以，需要针对不同情况作出不同处理：\r\n      // 1 如果 props.loaction.state 没有值，说明是直接进入到 登录页面，此时，只需要 go(-1) 返回上个页面即可\r\n      // 2 如果 props.loaction.state 有值，说明是重定向到 登录页面的，此时，需要根据 state 中的 from 来返回即可\r\n\r\n      // 访问页面的顺序：['/home', '/login', '/rent']\r\n      if (!props.location.state) {\r\n        // 没有\r\n        props.history.go(-1)\r\n      } else {\r\n        // 有\r\n        // 现有的浏览器历史记录：['/home', '/login']\r\n        // 1 调用 push 方法跳转页面的时候，实际上就是往浏览器历史记录中添加了一条新的记录\r\n        //  也就是：['/home', '/login', '/rent']\r\n        // props.history.push(props.location.state.from.pathname)\r\n        // 2 可以使用 replace 方法跳转页面，replace 不会往历史记录中添加新的记录，\r\n        //  而是将当前的历史记录替换掉\r\n        //  也就是：['/home', '/rent']\r\n        props.history.replace(props.location.state.from.pathname)\r\n      }\r\n    } else {\r\n      // 登录失败\r\n      Toast.info(description, 2)\r\n    }\r\n  }\r\n})(Login)\r\n\r\n// 注意：返回的是高阶组件包装后的组件\r\nexport default Login\r\n"],"sourceRoot":""}